# my global config
global:
  scrape_interval: 15s # By default, scrape targets every 15 seconds.
  evaluation_interval: 15s # By default, scrape targets every 15 seconds.

rule_files:
  - "alerts.yml"

alerting:
  alertmanagers:
    - scheme: http
      static_configs:
        - targets: ["alertmanager:9093"]

scrape_configs:
  - job_name: docker-cadvisor
    static_configs:
      - targets: ["10.1.0.203:8280"]
        labels:
          env: monitoring
      - targets: ["10.1.0.201:8280"]
        labels:
          env: org
      - targets: ["10.1.0.200:8280"]
        labels:
          env: net

  - job_name: docker-node-exporter
    static_configs:
      - targets: ["10.1.0.203:8281"]
        labels:
          env: monitoring
      - targets: ["10.1.0.201:8281"]
        labels:
          env: org
      - targets: ["10.1.0.200:8281"]
        labels:
          env: net

  # TODO: use Docker Service Discovery https://prometheus.io/docs/prometheus/latest/configuration/configuration/#docker_sd_config
  - job_name: docker-containers
    sample_limit: 50000
    static_configs:
      - targets: ["prometheus:9090"]
        labels:
          app: prometheus
      - targets: ["grafana:3000"]
        labels:
          app: grafana
      - targets: ["alertmanager:9093"]
        labels:
          app: alertmanager
      - targets: ["elasticsearch_exporter:9114"]
        labels:
          app: elasticsearch_exporter
          env: org
      - targets: ["blackbox_exporter:9115"]
        labels:
          app: blackbox_exporter
          env: org

  - job_name: docker-nginx
    static_configs:
      - targets: ["10.1.0.200:9113"]
        labels:
          app: off
          service: frontend
          env: net

  - job_name: docker-apache
    static_configs:
      - targets: ["10.1.0.200:9117"]
        labels:
          app: off
          service: backend
          env: net

  - job_name: docker-statsd
    static_configs:
      - targets: ["10.1.0.200:9102"]
        labels:
          app: robotoff
          service: api
          env: net
      - targets: ["10.1.0.201:9102"]
        labels:
          app: robotoff
          service: api
          env: org

  - job_name: docker-postgres
    static_configs:
      - targets: ["10.1.0.201:9187"]
        labels:
          app: robotoff
          service: postgres
          env: org
      - targets: ["10.1.0.200:9187"]
        labels:
          app: robotoff
          service: postgres
          env: net

  - job_name: docker-elasticsearch
    static_configs:
      - targets: ["10.1.0.200:9114"]
        labels:
          app: search-a-licious
          service: elasticsearch
          env: net
      - targets: ["10.1.0.201:9114"]
        labels:
          app: search-a-licious
          service: elasticsearch
          env: org

  - job_name: mysqld
    static_configs:
      - targets: ["10.1.0.107:9104"]
        labels:
          app: matomo
          service: mysqld
          env: prod

  - job_name: nginx
    static_configs:
      - targets: ["10.1.0.107:9113"]
        labels:
          app: matomo
          service: nginx
          env: prod

  # NGINX is proxying the exporters of servers at free
  # this rule enable to get them
  - job_name: free-exporters
    scheme: https
    basic_auth:
      username: prometheus
      password_file: /etc/prometheus/secrets/free-exporters.txt
    static_configs:
      - targets:
        # those must follow <container>/<service>
        # corresponding url is https://free-exporters.openfoodfacts.org/<target>/metrics
        - mongo/mongodb
        - off1-proxy/nginx
        - proxy/nginx
        - off/nginx
        - off/apache
        labels:
          app: off
          env: prod
          base_url: free-exporters.openfoodfacts.org:443
          metrics_path: metrics
    relabel_configs:
      # get instance, firts part + second part of target
      - source_labels: [__address__]
        regex: ^([^/]+)/(.*)$
        replacement: ${1}-${2}
        target_label: instance
      # the metrics path is adress + /metrics
      - source_labels: [__address__, metrics_path]
        separator: /
        target_label: __metrics_path__
      # put base url as address, as it is the same for all
      - source_labels: [base_url]
        target_label: __address__
      # drop labels that where only useful for configuration
      - regex: ^(base_url|metrics_path)$
        action: labeldrop



  
  #--------#
  # PROBES #
  #--------#
  - job_name: blackbox-exporter
    metrics_path: /probe
    scrape_interval: 60s
    params:
      module: [http_probe]
    relabel_configs:
      - source_labels: [__address__]
        regex: ^([^|]+)\|(.+)$ # splits target by | and uses 2nd token as target for blackbox_exporter
        replacement: ${2}
        target_label: __param_target
      - source_labels: [__address__]
        regex: (.+)\|(.+) # splits target by | and uses 1st token as 'app' label
        replacement: ${1}
        target_label: app
      - source_labels: [__param_target]
        target_label: instance
      - replacement: blackbox_exporter:9115
        target_label: __address__
    static_configs:
      - targets:
          - off|https://world.openfoodfacts.net
          - off-web|https://world.openfoodfacts.net/images/products/376/002/924/8001/1.100.jpg
          - off-product|https://world.openfoodfacts.net/product/3017620422003/nutella-ferrero
          - robotoff|https://robotoff.openfoodfacts.net/api/v1/health
          - off-query|https://query.openfoodfacts.net/health
          - off-search|https://search.openfoodfacts.net/
          - off-facets-kp|https://facets-kp.openfoodfacts.net/
          - prices-api|https://prices.openfoodfacts.net/api/v1/status
          - prices-app|https://prices.openfoodfacts.net/app/
        labels:
          env: net
      - targets:
          # Open Food Facts app (apache)
          - off|https://world.openfoodfacts.org
          # Product page
          - off-product|https://world.openfoodfacts.org/product/3017620422003/nutella-ferrero
          # Open Food Facts static resources
          - off-static|https://static.openfoodfacts.org/images/logos/off-logo-horizontal-light.svg
          # Open Food Facts images
          - off-images|https://images.openfoodfacts.org/images/products/376/002/924/8001/1.100.jpg
          - obf|https://world.openbeautyfacts.org
          - opff|https://world.openpetfoodfacts.org
          - opf|https://world.openproductsfacts.org
          - off-pro|https://world.pro.openfoodfacts.org
          - robotoff|https://robotoff.openfoodfacts.org/api/v1/health
          - off-query|https://query.openfoodfacts.org/health
          - off-search|https://search.openfoodfacts.org/
          - off-facets-kp|https://facets-kp.openfoodfacts.org/
          - folksonomy|https://api.folksonomy.openfoodfacts.org/
          - prices-api|https://prices.openfoodfacts.org/api/v1/status
          - prices-app|https://prices.openfoodfacts.org/app/
          # tools
          - blog|https://blog.openfoodfacts.org/
          - wiki|https://wiki.openfoodfacts.org/
          - forum|https://forum.openfoodfacts.org/
          # technical tools
          - grafana|https://grafana.openfoodfacts.org/api/health
          - prometheus|https://prometheus.openfoodfacts.org/-/healthy
          - alertmanager|https://alertmanager.openfoodfacts.org/-/healthy
          - kibana|https://kibana.openfoodfacts.org/status
          - elasticsearch|http://10.1.0.203:9200/_cluster/health?wait_for_status=yellow&timeout=50s
          # matomo, see https://matomo.org/faq/how-to/faq_20278/
          - matomo-interface|https://analytics.openfoodfacts.org/index.php?module=Login
          - matomo-tracker|https://analytics.openfoodfacts.org/matomo.php
        labels:
          env: org
  # prober for target that only support html as content-type (not json)
  - job_name: blackbox-exporter-html
    metrics_path: /probe
    scrape_interval: 60s
    params:
      module: [http_probe_html]
    relabel_configs:
      - source_labels: [__address__]
        regex: ^([^|]+)\|(.+)$ # splits target by | and uses 2nd token as target for blackbox_exporter
        replacement: ${2}
        target_label: __param_target
      - source_labels: [__address__]
        regex: (.+)\|(.+) # splits target by | and uses 1st token as 'app' label
        replacement: ${1}
        target_label: app
      - source_labels: [__param_target]
        target_label: instance
      - replacement: blackbox_exporter:9115
        target_label: __address__
    static_configs:
      - targets:
          - connect|https://connect.openfoodfacts.org/
        labels:
          env: org
  - job_name: blackbox-exporter-icmp
    metrics_path: /probe
    scrape_interval: 60s
    params:
      module: [icmp]
    relabel_configs:
      - source_labels: [__address__]
        regex: ^([^|]+)\|(.+)$ # splits target by | and uses 2nd token as target for blackbox_exporter
        replacement: ${2}
        target_label: __param_target
      - source_labels: [__address__]
        regex: (.+)\|(.+) # splits target by | and uses 1st token as 'app' label
        replacement: ${1}
        target_label: app
      # we use target as instance name
      - source_labels: [__param_target]
        target_label: instance
      - replacement: blackbox_exporter:9115
        target_label: __address__
    static_configs:
      - targets:
          - ovh1|ovh1.openfoodfacts.org
          - proxy1_ovh|proxy1.openfoodfacts.org
          - proxy2_free|proxy2.openfoodfacts.org
          - ovh2|ovh2.openfoodfacts.org
          - ovh3|ovh3.openfoodfacts.org
          - off1|off1.openfoodfacts.org
          - off2|off2.openfoodfacts.org
